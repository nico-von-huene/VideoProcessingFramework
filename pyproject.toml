[build-system]        
requires = [
  "setuptools >=42,<72",
  "scikit-build",
  "numpy >=1.24.4, <1.25.0",
  ## out-comment not install cmake/ninja via pip
  "cmake>=3.21",
  "ninja; platform_system!='Windows'",
  "pkgconfig",
]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[project]
name = "PyNvCodec"
version = "2.0.0"
authors = [{name = "NVIDIA"},]
description = """VPF stands for Video Processing Framework. Itâ€™s a set of C++ libraries and Python bindings which provides full HW acceleration for video processing tasks such as decoding, encoding, transcoding and GPU-accelerated color space and pixel format conversions.
VPF also supports exporting GPU memory objects such as decoded video frames to PyTorch tensors without Host to Device copies."""
requires-python = ">=3.10"
license = {file = "LICENSE"}
classifiers = [
    "Environment :: GPU :: NVIDIA CUDA :: 12.3",
    "Programming Language :: Python :: 3",
]
dependencies = [
  "numpy >=1.24.4, <1.25.0",
]

[project.optional-dependencies]
samples = ['pycuda', 'pyopengl', 'torch>2.1,<2.3', 'torchvision>0.16,<0.18', 'opencv-python', 'onnx', 'tensorrt', 'tqdm', 'PytorchNvCodec@ git+https://github.com/nico-von-huene/VideoProcessingFramework.git@torch2.2.0+cu123#subdirectory=src/PytorchNvCodec/']
tests = ['pycuda', 'pyopengl', 'torch>2.1,<2.3', 'torchvision>0.16,<0.18', 'opencv-python', 'PytorchNvCodec@ git+https://github.com/nico-von-huene/VideoProcessingFramework.git@torch2.2.0+cu123#subdirectory=src/PytorchNvCodec/']
torch = ['torch>2.1,<2.3', 'torchvision>0.16,<0.18', 'PytorchNvCodec@ git+https://github.com/nico-von-huene/VideoProcessingFramework.git@torch2.2.0+cu123#subdirectory=src/PytorchNvCodec/']
tensorrt = ['torch>2.1,<2.3', 'torchvision>0.16,<0.18', 'PytorchNvCodec@ git+https://github.com/nico-von-huene/VideoProcessingFramework.git@torch2.2.0+cu123#subdirectory=src/PytorchNvCodec/']
